import{JNode,JMain}from"./jqre.js";class Autocomplete{constructor(t){if("object"==typeof t.source&&null!==t.source){const e=[];for(const s of Object.keys(t.source))"object"==typeof t.source[s]&&null!==t.source[s]?t.source[s].hasOwnProperty("label")&&t.source[s].hasOwnProperty("value")&&e.push({label:t.source[s].label,value:t.source[s].value}):e.push({label:t.source[s],value:s});this.doSearch=async function(t,e){e(this.filter((e=>e.label&&e.label.toLowerCase().includes(t.term.toLowerCase()))))}.bind(e)}else"function"==typeof t.source&&(this.doSearch=t.source);const e={allowCustom:!1,applyStyle:!0,autoFocus:!0,disabled:!1};for(const s in e)t.hasOwnProperty(s)?this[s]=1==t[s]:this[s]=e[s];for(const e of["change","close","create","focus","open","response","search","select","renderItem"])"function"==typeof t[e]?this["f_"+e]=t[e].bind(this):this["f_"+e]=null;this.classes={};for(const e of["ui-autocomplete","ui-autocomplete-input","ui-autocomplete-loading","active"])"object"==typeof t.classes&&null!==t.classes&&"string"==typeof t.classes[e]&&t.classes[e]?this.classes[e]=t.classes[e]:this.classes[e]=e;t.hasOwnProperty("delay")&&!isNaN(t.delay)?this.delay=t.delay:this.delay=300,t.hasOwnProperty("minLength")&&!isNaN(t.minLength)?this.minLength=t.minLength:this.minLength=1,t.position&&"after"===t.position?this.position=t.position:this.position="before",this.valueSelected=!0,this.originalInput=(new JNode).add(t.el),this.input=this.originalInput.clone().removeAttr("name").addClass(this.classes["ui-autocomplete-input"]),this.originalInput.removeAttr("id").after(this.input).hide(),this.f_change&&this.input.on("change",(t=>{this.f_change(t,{item:{label:t.target.value,value:this.originalInput.val()}})}));let s="display:none;";this.applyStyle&&(s+="position:absolute;background:#fff;margin-top:"+("before"===this.position?this.input.outerHeight():0)+"px;width:"+this.input.outerWidth()+"px;overflow:hidden auto;list-style:none;padding:5px;"),this.input[this.position]('<ul style="'+s+'"></ul>'),this.widget="after"===this.position?this.input.next():this.input.prev(),this.widget.addClass(this.classes["ui-autocomplete"]).on("click","a",(t=>{t.preventDefault(),this.select(t.target)})).on("mouseover","a",(t=>{this.focus(t.target)})).on("mouseout","a",(()=>{this.widget.find("a."+this.classes.active.split(" ")[0]).removeClass(this.classes.active)})),this.input.on("blur",(t=>{t.relatedTarget&&t.relatedTarget.closest("ul")===this.widget[0]||(this.allowCustom||this.valueSelected||(this.input.val(""),this.originalInput.val("")),this.close())})),this.input.on("keydown",(t=>{const e=this.classes.active.split(" ")[0];let s=this.widget.find("a."+e);switch(t.key){case"Tab":case"Enter":s.length&&this.select(s[0]);break;case"ArrowUp":if(t.preventDefault(),0===s.length||"none"===this.widget.css("display")){if(!this.widget.children().length)return;this.widget.css("display","block"),this.focus(this.widget.find("a").last())}else s.parent().prev().length?this.focus(s.parent().prev().find("a",!0)):this.focus(this.widget.children().last().find("a",!0));s=this.widget.find("a."+e,!0),this.widget.scrollTop(Math.min(s[0].offsetTop,Math.max(this.widget[0].scrollTop,s[0].offsetTop-this.widget.height()+s.height())));break;case"ArrowDown":if(t.preventDefault(),0===s.length||"none"===this.widget.css("display")){if(!this.widget.children().length)return;this.widget.css("display","block"),this.focus(this.widget.find("a").first())}else s.parent().next().length?this.focus(s.parent().next().find("a",!0)):this.focus(this.widget.children().first().find("a",!0));s=this.widget.find("a."+e,!0),this.widget.scrollTop(Math.min(s[0].offsetTop,Math.max(this.widget[0].scrollTop,s[0].offsetTop-this.widget.height()+s.height())));break;case"Escape":this.close();break;case"PageUp":this.widget.scrollTop(Math.min(this.widget[0].scrollHeight,Math.max(this.widget[0].scrollTop-this.widget.height(),0)));break;case"PageDown":this.widget.scrollTop(Math.min(this.widget[0].scrollHeight,Math.max(this.widget[0].scrollTop+this.widget.height(),0)))}})),this._currTm=null,this.input.on("input",(()=>{this.disabled||(this.valueSelected=!1,this.input.val().length>=this.minLength&&(clearTimeout(this._currTm),this._currTm=setTimeout(function(){this.f_search&&this.f_search(null,null),this.input.addClass(this.classes["ui-autocomplete-loading"]),this.doSearch({term:this.input.val()},(t=>{this.input.removeClass(this.classes["ui-autocomplete-loading"]),this.f_response&&this.f_response(null,{content:t}),this.widget.html("");for(const e in t)this.f_renderItem?this.f_renderItem(this.widget[0],t[e]):"object"==typeof t[e]&&null!==t[e]?t[e].hasOwnProperty("label")&&t[e].hasOwnProperty("value")&&this.widget.append($('<li data-value="'+t[e].value+'"><a href="">'+t[e].label+"</a></li>")):this.widget.append($('<li data-value="'+e+'"><a href="">'+t[e]+"</a></li>"));this.widget.children().length>0?("none"===this.widget.css("display")&&this.f_open&&this.f_open(null,null),this.widget.css("display","block"),this.autoFocus&&this.focus(this.widget.find("a").first())):this.close()}))}.bind(this),this.delay)))})),this.f_create&&this.f_create(null,null)}focus(t){this.widget.find("a."+this.classes.active.split(" ")[0]).removeClass(this.classes.active),t=(new JNode).add(t).addClass(this.classes.active),this.f_focus&&this.f_focus(null,{item:{label:t.text(),value:t.parent().data("value")}})}select(t){const e=new Event("select");this.f_select&&this.f_select(e,{item:{label:t.textContent,value:t.parentNode.dataset.value}}),e.defaultPrevented||(this.valueSelected=!0,this.input.val(t.textContent),this.originalInput.val(t.parentNode.dataset.value),this.close())}close(){"none"!==this.widget.css("display")&&(this.widget.find("a."+this.classes.active.split(" ")[0]).removeClass(this.classes.active),this.widget.css("display","none"),this.f_close&&this.f_close(null,null),clearTimeout(this._currTm))}}Autocomplete.data=[],JNode.prototype.autocomplete=function(t,e=null){const s=this.filter("input[type=text]");if(s.length)for(const i of s){if("object"==typeof t&&null!==t){t.el=i;const e=new Autocomplete(t);return i.dataset.uiAutocomplete=Autocomplete.data.push(e)-1,e.input[0].dataset.uiAutocomplete=i.dataset.uiAutocomplete,this}if("string"==typeof t){const s=i.dataset.uiAutocomplete;if(s&&Autocomplete.data[s]){const i=Autocomplete.data[s];switch(t){case"widget":return i.widget;case"instance":return i;case"enable":i.disabled=!1;break;case"disable":i.disabled=!0;break;case"close":i.close();break;case"destroy":let t=i.originalInput.data("ui-autocomplete");i.widget.remove(),i.originalInput.attr("id",i.input.attr("id")),i.originalInput.removeData("uiAutocomplete"),i.input.remove(),i.originalInput.show(),Autocomplete.data[t]=null;break;case"search":null!==e&&i.input.val(e),i.input.trigger("input")}continue}}break}return this};