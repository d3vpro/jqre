import{JNode,JMain}from"./jqre.js";JNode.prototype.get=function(n=null){return null!==n?(n<0&&(n=this.length+n),this.length>=n&&n>=0?this[n]:[]):Array.from(this)},JNode.prototype.size=function(){return this.length},JNode.prototype.slice=function(n,t=null){t=null===t?this.length:Math.min(t,this.length);const o=new JNode;for(const[r,e]of this.entries())r>=n&&r<t&&o.add(e);return o},JNode.prototype.toArray=function(){return Array.from(this)},JNode.prototype.scrollLeft=function(n=null){for(const t of this){if(null===n)return t.scrollLeft;t.scrollLeft=parseInt(n)}return this},JNode.prototype.scrollTop=function(n=null){for(const t of this){if(null===n)return t.scrollTop;t.scrollTop=parseInt(n)}return this},JMain.clone=function(n){return null==n||/boolean|number|string/.test(typeof n)?n:JSON.parse(JSON.stringify(n))},JMain.contains=function(n,t){return n.contains(t)},JMain.data=function(n,t=null,o=null){return n instanceof Node?null!==t?null!==o?(n.dataset[t]=o,!0):n.dataset[t]:n.dataset:null},JMain.each=function(n,t){for(const[o,r]of n.entries())t(o,r);return!0},JMain.fn={extend:function(n){for(const t in n)JNode.prototype[t]=n[t]}},JMain.inArray=function(n,t,o=null){return t.indexOf(n,o??0)},JMain.isArray=function(n){return Array.isArray(n)},JMain.isEmptyObject=function(n){return 0===Object.keys(n).length},JMain.isFunction=function(n){return"function"==typeof n},JMain.isNumeric=function(n){return!isNaN(parseFloat(n))&&isFinite(n)},JMain.isPlainObject=function(n){return n.constructor===Object},JMain.makeArray=function(n){const t=[];for(const o in n)t.push(n[o]);return t},JMain.noop=function(){},JMain.now=function(){return Date.now()};